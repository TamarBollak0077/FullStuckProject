// <auto-generated />
using System;
using Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dal.Migrations
{
    [DbContext(typeof(RehubDbContext))]
    partial class RehubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dal.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ContactInfo ");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth ");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FirstName ");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LastName ");

                    b.HasKey("PatientId")
                        .HasName("PK__tmp_ms_x__970EC36616CFDD90");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Dal.Entities.PatientSession", b =>
                {
                    b.Property<int>("PatientSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PatientSessionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientSessionId"));

                    b.Property<TimeOnly>("Hour")
                        .HasColumnType("time");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.Property<DateOnly>("SessionDate")
                        .HasColumnType("date");

                    b.Property<int>("SessionId")
                        .HasColumnType("int")
                        .HasColumnName("SessionID");

                    b.Property<string>("SessionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.HasKey("PatientSessionId")
                        .HasName("PK__PatientS__7F94550A211833C8");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientSessions");
                });

            modelBuilder.Entity("Dal.Entities.Therapist", b =>
                {
                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FirstName ");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LastName ");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("TherapistId")
                        .HasName("PK__tmp_ms_x__4D621912BFFF3B25");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("Dal.Entities.PatientSession", b =>
                {
                    b.HasOne("Dal.Entities.Patient", "Patient")
                        .WithMany("PatientSessions")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__PatientSe__Patie__5CD6CB2B");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Dal.Entities.Patient", b =>
                {
                    b.Navigation("PatientSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
